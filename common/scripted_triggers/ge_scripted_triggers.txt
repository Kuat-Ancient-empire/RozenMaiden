is_rozen_leader = {
	optimize_memory
	OR = {
		has_leader_flag = roz_suigintou_flag
		#has_leader_flag = roz_kanaria_flag
		#has_leader_flag = roz_suiseiseki_flag
		#has_leader_flag = roz_souseiseki_flag
		#has_leader_flag = roz_shinku_flag
		#has_leader_flag = roz_hinaichigo_flag
		#has_leader_flag = roz_kirakishou_flag
	}
}

has_tech_ge_shippart_titian_aura = {
	optimize_memory
	has_technology = tech_ge_shippart_titian_aura
}

has_rozen_leader = {
	optimize_memory
	any_owned_leader = {
		is_rozen_leader = yes			
	}
}

roz_sgt_site_planet_select_condition = { ##scope:solar system
	optimize_memory
	any_system_planet = {
		has_owner = no
		is_colony = no
		has_anomaly = no
		NOR = {
			exists = archaeological_site
			has_planet_flag = hatchling_egg
		}
		OR = {
			is_planet_class = pc_molten
			is_planet_class = pc_barren
			is_planet_class = pc_barren_cold
			is_planet_class = pc_toxic
			is_planet_class = pc_frozen
			is_planet_class = pc_nuked
			is_planet_class = pc_shattered
			is_planet_class = pc_asteroid
		}
	}
}

has_rozen_affection_trait = {
	optimize_memory
	OR = {
		has_trait = leader_trait_roz_a_strangeness
		has_trait = leader_trait_roz_a_friendly
		has_trait = leader_trait_roz_a_like
		has_trait = leader_trait_roz_a_love
	}
}

#strangeness
ge_affection_strangeness_trigger = {
	optimize_memory
	is_variable_set = roz_suigintou_affection
	check_variable = {
		which = roz_suigintou_affection
		value >= 0
	}
}

#frindly
ge_affection_frindly_trigger = {
	optimize_memory
	is_variable_set = roz_suigintou_affection
	is_rozen_leader = yes
	has_rozen_affection_trait = yes
	check_variable = {
		which = roz_suigintou_affection
		value >= 30
	}
}

#like
ge_affection_like_trigger = {
	optimize_memory
	is_variable_set = roz_suigintou_affection
	is_rozen_leader = yes
	has_rozen_affection_trait = yes
	check_variable = {
		which = roz_suigintou_affection
		value >= 60
	}
}

#love
ge_affection_love_trigger = {
	optimize_memory
	is_variable_set = roz_suigintou_affection
	is_rozen_leader = yes
	has_rozen_affection_trait = yes
	check_variable = {
		which = roz_suigintou_affection
		value >= 90
	}
}

#好感度判定：友好
ge_aft_fri = {
	optimize_memory
	is_rozen_leader = yes
	has_rozen_affection_trait = yes
	check_variable = {
		which = roz_suigintou_affection
		value >= 30
	}
}

#好感度判定：喜欢
ge_aft_lik = {
	optimize_memory
	is_rozen_leader = yes
	has_rozen_affection_trait = yes
	check_variable = {
		which = roz_suigintou_affection
		value >= 60
	}
}

#好感度判定：爱意
ge_aft_lov = {
	optimize_memory
	is_rozen_leader = yes
	has_rozen_affection_trait = yes
	check_variable = {
		which = roz_suigintou_affection
		value >= 90
	}
}

###############################
###舰船部件条件

has_ge_component = {
	optimize_memory
	OR = {
		has_component = CORVETTE_GE_REACTOR
		has_component = DESTROYER_GE_REACTOR
		has_component = BATTLESHIP_GE_REACTOR
		has_component = CRUISER_GE_REACTOR
		has_component = TITAN_GE_REACTOR
		has_component = PLATFORM_GE_REACTOR
		has_component = COLOSSUS_GE_REACTOR
		has_component = ION_CANNON_GE_REACTOR
		has_component = STARBASE_GE_REACTOR
	}
}

has_ge_weapon = {
	optimize_memory
	OR = {
		has_component = GE_SMALL_LASER_CANNON
		has_component = GE_MEDIUM_LASER_CANNON
		has_component = GE_LARGE_LASER_CANNON
		has_component = GE_XL_BEAM
		has_component = GE_T_BEAM
		has_component = GE_GRAVITY_BURST
		has_component = GE_PD
		has_component = ge_vn_main_beam
		has_component = ge_vn_secondary_beam
		has_component = ge_vn_pd
		has_component = ge_large_vn_laser
		has_component = ge_medium_vn_laser
		has_component = ge_small_vn_laser
		has_component = ge_vn_aux
		has_component = ge_vn_torpedo
		has_component = GE_LARGE_KINETIC_GUN
		has_component = GE_MEDIUM_KINETIC_GUN
		has_component = GE_SMALL_KINETIC_GUN
	}
}

has_ge_energy_weapon = {
	optimize_memory
	OR = {
		has_component = GE_SMALL_LASER_CANNON
		has_component = GE_MEDIUM_LASER_CANNON
		has_component = GE_LARGE_LASER_CANNON
		has_component = GE_XL_BEAM
		has_component = GE_T_BEAM
		has_component = GE_GRAVITY_BURST
		has_component = GE_PD
		has_component = ge_vn_main_beam
		has_component = ge_vn_secondary_beam
		has_component = ge_vn_pd
		has_component = ge_large_vn_laser
		has_component = ge_medium_vn_laser
		has_component = ge_small_vn_laser
	}
}

has_ge_kinetic_weapon = {
	optimize_memory
	OR = {
		has_component = GE_LARGE_KINETIC_GUN
		has_component = GE_MEDIUM_KINETIC_GUN
		has_component = GE_SMALL_KINETIC_GUN
	}
}

has_component_ZERO_POINT_REACTOR = {
	optimize_memory
	OR = {
		has_component = CORVETTE_ZERO_POINT_REACTOR
		has_component = DESTROYER_ZERO_POINT_REACTOR
		has_component = CRUISER_ZERO_POINT_REACTOR
		has_component = BATTLESHIP_ZERO_POINT_REACTOR
		has_component = TITAN_ZERO_POINT_REACTOR
		has_component = COLOSSUS_ZERO_POINT_REACTOR
	}
}

has_component_DARK_MATTER_REACTOR = {
	optimize_memory
	OR = {
		has_component = CORVETTE_DARK_MATTER_REACTOR
		has_component = DESTROYER_DARK_MATTER_REACTOR
		has_component = CRUISER_DARK_MATTER_REACTOR
		has_component = BATTLESHIP_DARK_MATTER_REACTOR
		has_component = TITAN_DARK_MATTER_REACTOR
		has_component = COLOSSUS_DARK_MATTER_REACTOR
	}
}

has_component_GE_REACTOR = {
	optimize_memory
	OR = {
		has_component = CORVETTE_GE_REACTOR
		has_component = DESTROYER_GE_REACTOR
		has_component = CRUISER_GE_REACTOR
		has_component = BATTLESHIP_GE_REACTOR
		has_component = TITAN_GE_REACTOR
		has_component = COLOSSUS_GE_REACTOR
		has_component = STARBASE_GE_REACTOR
	}
}

is_real_roz_YS_planet = {
	optimize_memory
	exists = event_target:roz_outland_planet@root
	is_same_value = event_target:roz_outland_planet@root
	is_planet_class = pc_roz_YS_planet
}

is_roz_abyss_vass_extra_country_global_target = {
	optimize_memory
	OR = {
		is_same_value = event_target:roz_abyss_vass_extra_1_target@root
		is_same_value = event_target:roz_abyss_vass_extra_2_target@root
		is_same_value = event_target:roz_abyss_vass_extra_3_target@root
		is_same_value = event_target:roz_abyss_vass_extra_4_target@root
		is_same_value = event_target:roz_abyss_vass_extra_5_target@root
	}
}

roz_is_MOD_country = {
	optimize_memory
	OR = {
		has_wg_special_authority = yes
		is_nirvana_empire = yes
		is_cg_empire = yes
		is_futa_country = yes
		is_KANSEN_species = yes
	}
}

roz_is_regular_authority = {
	optimize_memory
	OR = {
		has_authority = auth_democratic
		has_authority = auth_oligarchic
		has_authority = auth_dictatorial
		has_authority = auth_imperial
		has_authority = auth_hive_mind
		has_authority = auth_machine_intelligence
		has_authority = auth_corporate
	}
}

#或许是本mod消耗最高的检测了
roz_is_all_abyss_killed_except_madgod_system = {
	optimize_memory
	#abyss vass
	NOT = { any_playable_country = { has_country_flag = roz_abyss_vass_country } }
	any_system = {
		has_star_flag = roz_abyss_fleet_outpost_system
		NOT = { any_fleet_in_system = { is_owned_by = event_target:roz_madgod_force_country@$scope$ } }
		NOT = { any_fleet_in_system = { has_fleet_flag = roz_abyss_fleet } }
	}
}

#可被深渊势力轰炸的星球
#scope (planet)
roz_planet_can_bombed_by_abyss_crisis = {
	optimize_memory
	is_colony = yes
	space_owner = { NOT = { has_country_flag = roz_abyss_vass_country } }
}

#scope (fleet)
roz_is_abyss_attack_fleet = {
	optimize_memory
	OR = {
		has_fleet_flag = roz_abyss_attack_fleet_small
		has_fleet_flag = roz_abyss_attack_fleet_median
		has_fleet_flag = roz_abyss_attack_fleet_large
		has_fleet_flag = roz_abyss_attack_fleet_marvelous
	}
}

#scope: ship
roz_is_regular_starbase = {
	optimize_memory
	is_ship_class = shipclass_starbase
	OR = {
		is_ship_size = starbase_outpost
		is_ship_size = starbase_starport
		is_ship_size = starbase_citadel
		is_ship_size = starbase_fe_outpost
		is_ship_size = starbase_starfortress
		is_ship_size = starbase_starhold
	}
}

###深渊入侵局势判断
roz_unholy_invasion_situation_12 = {
	optimize_memory

}
roz_unholy_invasion_situation_23 = {
	optimize_memory

}
roz_unholy_invasion_situation_34 = {
	optimize_memory

}
roz_unholy_invasion_situation_45 = {
	optimize_memory

}

roz_unholy_invasion_situation_54 = {
	optimize_memory

}
roz_unholy_invasion_situation_43 = {
	optimize_memory

}
roz_unholy_invasion_situation_32 = {
	optimize_memory

}
roz_unholy_invasion_situation_21 = {
	optimize_memory

}

###scope: army
is_rozen_army = {
	optimize_memory
	OR = {
		army_type = Q_sgt
		army_type = Q_titan_sgt
	}
}
