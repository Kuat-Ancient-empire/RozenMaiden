roz_junn_country_create = {
	create_country = {
		name = "NAME_nfield_junn"
		type = ge_N_Field
		flag = {
			icon = {
				category = "nfield_junn"
				file = "flag_roz_junn.dds"
			}
			background = {
				category = "backgrounds"
				file = "inverted_v.dds"
			}
			colors = {
				"black"
				"black"
				"null"
				"null"
			}
		}
		effect = {
			save_global_event_target_as = roz_junn_global_country@root
			set_country_flag = roz_junn_country
		}
	}
	last_created_country = {
		establish_communications_no_message = root
	}
	event_target:roz_junn_global_country@root = {
		owner = {
		}
	}
}

roz_hinaichigo_country_create = {
	create_country = {
		name = "NAME_nfield_hinaichigo"
		type = ge_N_Field
		flag = {
			icon = {
				category = "nfield_hinaichigo"
				file = "flag_roz_hinaichigo.dds"
			}
			background = {
				category = "backgrounds"
				file = "inverted_v.dds"
			}
			colors = {
				"black"
				"black"
				"null"
				"null"
			}
		}
		effect = {
			save_global_event_target_as = roz_hinaichigo_global_country@root
			set_country_flag = roz_hinaichigo_country
		}
	}
	last_created_country = {
		establish_communications_no_message = root
	}
	set_country_flag = roz_hinaichigo_arrive
}

roz_madgod_country_initiate = {
	create_country = {
		name = NAME_madgod_force_country
		type = enclave
		authority = "auth_oligarchic"
		civics = {
			civic = civic_ancient_preservers
		}
		origin = "origin_default"
		species = last_created_species
		flag = {
			icon = {
				category = special
				file = "shroudwalkers.dds"
			}
			background = {
				category = "backgrounds"
				file = "vertical.dds"
			}
			colors = {
				"red"
				"red"
				"null"
				"null"
			}
		}
		ethos = {
			ethic = ethic_fanatic_militarist
		}
		ignore_initial_colony_error = yes
	}
	last_created_country = {
		set_country_flag = roz_madgod_force_country_flag
		set_graphical_culture = necroid_01
		save_global_event_target_as = roz_madgod_force_country@root
		set_hostile = root
		establish_communications_no_message = root
	}
}

roz_madgod_fleet_jtcl_create_direct = {
	#方案一
	event_target:roz_madgod_force_country@root = {
		create_fleet = {
			name = "NAME_roz_krks_zakko"
			settings = {
				spawn_debris = no
				is_boss = yes
			}
			effect = {
				set_fleet_flag = roz_madgod_jtcl_fleet
				while = {
					count = 12
					create_ship = {
						name = "NAME_EDDY_ROZ"
						design = "NAME_Corrupted_Avatar"
						effect = {
						}
					}
				}
				set_location = event_target:roz_n_field_site_target@root
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = return_point
				set_aggro_range = 300
				add_modifier = {
					modifier = roz_krks_bf_stage1_HK_buff
					mult = 0.75
				}
			}
		}
	}
}

roz_madgod_fleet_jtcl_create_decoy = {
	#方案二
	event_target:roz_madgod_force_country@root = {
		create_fleet = {
			name = "NAME_roz_krks_zakko"
			settings = {
				spawn_debris = no
				is_boss = yes
			}
			effect = {
				set_fleet_flag = roz_madgod_jtcl_fleet
				while = {
					count = 8
					create_ship = {
						name = "NAME_EDDY_ROZ"
						design = "NAME_Corrupted_Avatar"
						effect = {
						}
					}
				}
				set_location = event_target:roz_n_field_site_target@root
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = return_point
				set_aggro_range = 300
				add_modifier = {
					modifier = roz_krks_bf_stage1_HK_buff
					mult = 0.5
				}
			}
		}
	}
}

###感染体入侵
###比较ai态度，计算数量
roz_SK_invasion_dip_effect = {
	while = {
		limit = {
			any_playable_country = {
				opinion_level = {
					who = root
					level $sign$ $opinion$
				}
				NOT = {
					has_country_flag = roz_SK_invasion_dip_$opinion$_ai_flag
				}
			}
		}
		random_playable_country = {
			limit = {
				NOT = {
					has_country_flag = roz_SK_invasion_dip_$opinion$_ai_flag
				}
			}
			set_country_flag = roz_SK_invasion_dip_$opinion$_ai_flag
		}
		change_variable = {
			which = roz_SK_invasion_dip_$opinion$_ai
			value = 1
		}
	}
}

# roz_SK_invasion_dip_aggressive_effect = {
# 	while = {
# 		#支持者
# 		limit = {
# 			any_playable_country = {
# 				opinion_level = {
# 					who = root
# 					level >= good
# 				}
# 				NOT = {
# 					has_country_flag = roz_SK_invasion_dip_aggressive_ai_flag
# 				}
# 			}
# 		}
# 		random_playable_country = {
# 			limit = {
# 				NOT = {
# 					has_country_flag = roz_SK_invasion_dip_aggressive_ai_flag
# 				}
# 			}
# 			set_country_flag = roz_SK_invasion_dip_aggressive_ai_flag
# 		}
# 		change_variable = {
# 			which = roz_SK_invasion_dip_aggressive_ai
# 			value = 1
# 		}
# 	}
# }

# roz_SK_invasion_dip_negative_effect = {
# 	while = {
# 		#反对者
# 		limit = {
# 			any_playable_country = {
# 				opinion_level = {
# 					who = root
# 					level <= poor
# 				}
# 				NOT = {
# 					has_country_flag = roz_SK_invasion_dip_negative_ai_flag
# 				}
# 			}
# 		}
# 		random_playable_country = {
# 			limit = {
# 				NOT = {
# 					has_country_flag = roz_SK_invasion_dip_negative_ai_flag
# 				}
# 			}
# 			set_country_flag = roz_SK_invasion_dip_negative_ai_flag
# 		}
# 		change_variable = {
# 			which = roz_SK_invasion_dip_negative_ai
# 			value = 1
# 		}
# 	}
# }

# roz_SK_invasion_dip_neutral_effect = {
# 	while = {
# 		#中立者
# 		limit = {
# 			any_playable_country = {
# 				opinion_level = {
# 					who = root
# 					level = neutral
# 				}
# 				NOT = {
# 					has_country_flag = roz_SK_invasion_dip_neutral_ai_flag
# 				}
# 			}
# 		}
# 		random_playable_country = {
# 			limit = {
# 				NOT = {
# 					has_country_flag = roz_SK_invasion_dip_neutral_ai_flag
# 				}
# 			}
# 			set_country_flag = roz_SK_invasion_dip_neutral_ai_flag
# 		}
# 		change_variable = {
# 			which = roz_SK_invasion_dip_neutral_ai
# 			value = 1
# 		}
# 	}
# }

###真红初始化
create_roz_shinku_scientist = {
	###真红-做科学家
	optimize_memory
	set_country_flag = roz_shinku_scientist_active
	every_owned_leader = {#取当前真红为临时target
		limit = {
			has_leader_flag = roz_shinku_flag
		}
		save_event_target_as = roz_leader_shinku_target_temp 
	}
	#缓存国家目标领袖更新替换,当前真红为舰队司令，要转科学家,先kill了再说
	event_target:roz_shinku_admiral_inactive_temp@root = { #令临时存储国家的舰队司令真红消失
		kill_leader = {
			show_notification = no
		}
	}
	#若当前真红职位为指挥官
	clone_leader = {
		#替换，event_target:roz_shinku_country是真红的缓存国家
		#target = event_target:roz_leader_shinku_global_target #这个global target是玩家的真红
		target = event_target:roz_leader_shinku_target_temp   #刚刚存的target
		effect = {
			save_global_event_target_as = roz_shinku_admiral_inactive_temp@root
			unassign_leader = this
			set_leader_flag = roz_shinku_flag
			set_owner = event_target:roz_shinku_country@root #存到临时存储国家
			freeze_leader_age = yes
			roz_leader_name_set_effect = {
				who_jp = shinku
				who_sc = zhenhong
			}
		}
	}
	every_owned_leader = {
		limit = {
			OR = {
				has_trait = leader_trait_ge_mercury_lamp_scientist
				has_trait = leader_trait_ge_mercury_lamp
				has_leader_flag = roz_shinku_flag
				is_variable_set = ge_leader_affection
			}
		}
		unassign_leader = this
		kill_leader = {
			show_notification = no
		}
	}
	owner = { 
		if = {
			limit = { 
				event_target:roz_shinku_country@root = {
					any_owned_leader = {
						leader_class = scientist
						has_trait = leader_trait_ge_mercury_lamp_scientist
					}
				}
			}
			roz_suigintou_clone_scientist_from_cache_country = yes
		}
		else_if = {
			limit = { }
			create_leader = {
				class = scientist
				name = "NAME_Suigintou"
				skill = 1
				gender = female
				species = owner_main_species
				immortal = yes
				event_leader = yes
				set_age = 17
				traits = { }
				skip_background_generation = yes
				custom_catch_phrase = suigintou_sci_catch_phrase
				custom_description = suigintou_backstory
				effect = {
					add_skill_without_trait_selection = 1
					remove_all_traits = yes
					#change_leader_portrait = roz_shinku_6
					set_variable = {
						which = ge_leader_affection
						value = owner.ge_leader_aft_sgt
					}
				}
			}
			last_created_leader = {
				add_trait = leader_trait_ge_meimei_scientist
				add_trait = leader_trait_ge_N_field_scientist
				add_trait = leader_trait_ge_mercury_lamp_scientist
				random_list = {
					1 = { add_trait = leader_trait_surveyor }
					1 = { add_trait = leader_trait_midas_touch }
					1 = { add_trait = leader_trait_knowledge_for_the_masses }
					1 = { add_trait = leader_trait_great_researcher }
					1 = { add_trait = leader_trait_truth_seeker }
					1 = { add_trait = leader_trait_brilliant_shipwright }
					1 = { add_trait = leader_trait_frontier_adventurer }
					1 = { add_trait = leader_trait_xeno_cataloger }
					1 = { add_trait = leader_trait_knowledge_for_the_masses }
				}
				freeze_leader_age = yes
			}
		}
		
	}
	roz_suigintou_initialize_scientist = yes
	remove_country_flag = roz_shinku_admiral_active
}

roz_leader_type_switch_clone_standard_effect = {
	unassign_leader = this
	freeze_leader_age = yes
	set_leader_flag = roz_$leader$_flag
	set_owner = event_target:roz_$leader$_country@root
	roz_leader_name_set_effect = {
		who_jp = $leader$
		who_sc = $leader_sc$
	}
}

roz_leader_type_switch_kill_standard_effect = {
	every_owned_leader = {
		limit = {
			OR = {
				has_trait = $symbolic_trait_1$
				has_trait = $symbolic_trait_2$ #select to use
				has_leader_flag = roz_$leader$_flag
				is_variable_set = ge_leader_affection
			}
		}
		unassign_leader = this
		kill_leader = {
			show_notification = no
		}
	}
}	

roz_leader_type_switch_create_leader_standard_effect = {
	if = {
		limit = { 
			event_target:roz_$leader$_country@root = {
				any_owned_leader = {
					leader_class = $leader_type$
					has_trait = $symbolic_trait_1$
				}
			}
		}
		roz_leader_type_switch_clone_from_cache_country_effect = {
			leader = $leader$
			leader_sc = $leader_sc$
			leader_type = $leader_type$
		}
	}
	else_if = {
		limit = { }
		create_leader = {
			class = $leader_type$
			name = "NAME_$leader$"
			skill = 1
			gender = female
			species = owner_main_species
			immortal = yes
			event_leader = yes
			set_age = 17
			traits = { }
			skip_background_generation = yes
			custom_catch_phrase = $leader$_$leader_type$_catch_phrase
			custom_description = $leader$_backstory
			effect = {
				add_skill_without_trait_selection = 1
				remove_all_traits = yes
				set_variable = {
					which = ge_leader_affection
					value = owner.ge_leader_aft_$leader$
				}
			}
		}
		last_created_leader = {
			add_trait = $symbolic_trait_1$
			add_trait = $symbolic_trait_2$
			add_trait = $symbolic_trait_3$
			random_list = {
				1 = { add_trait = leader_trait_surveyor }
				1 = { add_trait = leader_trait_midas_touch }
				1 = { add_trait = leader_trait_knowledge_for_the_masses }
				1 = { add_trait = leader_trait_great_researcher }
				1 = { add_trait = leader_trait_truth_seeker }
				1 = { add_trait = leader_trait_brilliant_shipwright }
				1 = { add_trait = leader_trait_frontier_adventurer }
				1 = { add_trait = leader_trait_xeno_cataloger }
				1 = { add_trait = leader_trait_knowledge_for_the_masses }
			}
			freeze_leader_age = yes
		}
	}
}

roz_leader_type_switch_clone_from_cache_country_effect = {
	clone_leader = {#从临时国家取领袖到玩家国家
		target = event_target:roz_$leader$_$leader_type$_inactive_temp@root
		custom_catch_phrase = $leader$_$leader_type$_catch_phrase
		custom_description = $leader$_backstory
		effect = {
			freeze_leader_age = yes
			roz_leader_name_set_effect = {
				who_jp = $leader$
				who_sc = $leader_sc$
			}
			set_leader_flag = roz_$leader$_flag
			set_owner = event_target:roz_$leader$_owner@root
		}
	}
}




